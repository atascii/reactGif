{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","console","log","fetch","resp","json","data","gifts","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cate","index","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,8BACI,uBAAMC,SAZO,SAACC,GAClBA,EAAIC,iBAEAJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMd,UACA,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAIQ,OAAOF,gB,QCPpBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,0FAE4EO,UAAUF,GAFtF,uCAGnBG,QAAQC,IAAI,QAAST,GAHF,SAICU,MAAMV,GAJP,cAIbW,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GAAS,IAAD,EAC5B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAXvB,kBAeZc,GAfY,4CAAH,sDCGPK,EAAU,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAErB,ECFwB,SAAEA,GAE1B,MAA0BrB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZCC,qBAAU,WAEPnB,EAAQC,GACHmB,MAAM,SAACC,GACJH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACf,IAEIgB,EDjBuBK,CAAcrB,GAAjCY,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAEpB,OACI,qCACA,6BAAKf,IAEHe,EAAU,cAAgB,GAE5B,qBAAKnB,UAAU,YAAf,SAEYgB,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIlB,aEWxB6B,EAzBM,WAEjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAIA,OAFAyB,QAAQC,IAAI,qBAAsBmB,GAG9B,qCACA,8CACA,cAAC,EAAD,CAAa7C,cAAiBA,IAC9B,uBAEA,6BAEO6C,EAAWb,KAAK,SAACc,EAAMC,GAGvB,OAAO,cAAC,EAAD,CAAuBzB,SAAYwB,GAAnBC,Y,YCZtCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.21b1641a.chunk.js","sourcesContent":["import React, {useState}from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // undefined\r\n\r\n    const handleInputChange = (evt) => {\r\n        setInputValue(evt.target.value);\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {            \r\n            //setCategories(categ => [ ...categ, inputValue]);\r\n            setCategories(categ => [ inputValue, ...categ]);\r\n            setInputValue('');            \r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit = {handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={ handleInputChange } \r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nexport const getGifs = async (category) => {        \r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=HJcFOp9n4m4ELbiAdmXh6dc9Z20Q5DnU&q=${encodeURI(category)}&limit=10&offset=0&rating=g&lang=en`;\r\n    console.log(\"URL: \", url);\r\n    const resp  = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifts = data.map( img =>  {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }            \r\n    });\r\n    \r\n    return gifts;\r\n}    \r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );  \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        { loading ? 'Cargando...' : '' }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    }) \r\n   \r\n     useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then( (imgs) => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n    }, [category]);    \r\n  \r\n    return  state // { data: [], loading: true}\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {   \r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    console.log('array categories: ', categories)\r\n\r\n    return(\r\n        <>\r\n        <h1>GifExpertApp</h1>\r\n        <AddCategory setCategories = {setCategories} />\r\n        <hr/>        \r\n        \r\n        <ul>\r\n            {\r\n               categories.map( (cate, index) => {              \r\n               \r\n                \r\n               return <GifGrid key = {index} category = {cate}/>\r\n            })\r\n            }\r\n        </ul>\r\n        </>        \r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nimport 'animate.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}